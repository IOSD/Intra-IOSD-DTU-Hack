var mod_pagespeed_h0mbYN62XM = "!function(a){\"use strict\";\"function\"==typeof define&&define.amd?define([\"jquery\"],a):a(jQuery)}(function(a){\"use strict\";function b(a){if(a instanceof Date)return a;if(String(a).match(g))return String(a).match(/^[0-9]*$/)&&(a=Number(a)),String(a).match(/\\-/)&&(a=String(a).replace(/\\-/g,\"/\")),new Date(a);throw new Error(\"Couldn't cast `\"+a+\"` to a date object.\")}function c(a){var b=a.toString().replace(/([.?*+^$[\\]\\\\(){}|-])/g,\"\\\\$1\");return new RegExp(b)}function d(a){return function(b){var d=b.match(/%(-|!)?[A-Z]{1}(:[^;]+;)?/gi);if(d)for(var f=0,g=d.length;g>f;++f){var h=d[f].match(/%(-|!)?([a-zA-Z]{1})(:[^;]+;)?/),j=c(h[0]),k=h[1]||\"\",l=h[3]||\"\",m=null;h=h[2],i.hasOwnProperty(h)&&(m=i[h],m=Number(a[m])),null!==m&&(\"!\"===k&&(m=e(l,m)),\"\"===k&&10>m&&(m=\"0\"+m.toString()),b=b.replace(j,m.toString()))}return b=b.replace(/%%/,\"%\")}}function e(a,b){var c=\"s\",d=\"\";return a&&(a=a.replace(/(:|;|\\s)/gi,\"\").split(/\\,/),1===a.length?c=a[0]:(d=a[0],c=a[1])),1===Math.abs(b)?d:c}var f=[],g=[],h={precision:100,elapse:!1};g.push(/^[0-9]*$/.source),g.push(/([0-9]{1,2}\\/){2}[0-9]{4}( [0-9]{1,2}(:[0-9]{2}){2})?/.source),g.push(/[0-9]{4}([\\/\\-][0-9]{1,2}){2}( [0-9]{1,2}(:[0-9]{2}){2})?/.source),g=new RegExp(g.join(\"|\"));var i={Y:\"years\",m:\"months\",n:\"daysToMonth\",w:\"weeks\",d:\"daysToWeek\",D:\"totalDays\",H:\"hours\",M:\"minutes\",S:\"seconds\"},j=function(b,c,d){this.el=b,this.$el=a(b),this.interval=null,this.offset={},this.options=a.extend({},h),this.instanceNumber=f.length,f.push(this),this.$el.data(\"countdown-instance\",this.instanceNumber),d&&(\"function\"==typeof d?(this.$el.on(\"update.countdown\",d),this.$el.on(\"stoped.countdown\",d),this.$el.on(\"finish.countdown\",d)):this.options=a.extend({},h,d)),this.setFinalDate(c),this.start()};a.extend(j.prototype,{start:function(){null!==this.interval&&clearInterval(this.interval);var a=this;this.update(),this.interval=setInterval(function(){a.update.call(a)},this.options.precision)},stop:function(){clearInterval(this.interval),this.interval=null,this.dispatchEvent(\"stoped\")},toggle:function(){this.interval?this.stop():this.start()},pause:function(){this.stop()},resume:function(){this.start()},remove:function(){this.stop.call(this),f[this.instanceNumber]=null,delete this.$el.data().countdownInstance},setFinalDate:function(a){this.finalDate=b(a)},update:function(){if(0===this.$el.closest(\"html\").length)return void this.remove();var b,c=void 0!==a._data(this.el,\"events\"),d=new Date;b=this.finalDate.getTime()-d.getTime(),b=Math.ceil(b/1e3),b=!this.options.elapse&&0>b?0:Math.abs(b),this.totalSecsLeft!==b&&c&&(this.totalSecsLeft=b,this.elapsed=d>=this.finalDate,this.offset={seconds:this.totalSecsLeft%60,minutes:Math.floor(this.totalSecsLeft/60)%60,hours:Math.floor(this.totalSecsLeft/60/60)%24,days:Math.floor(this.totalSecsLeft/60/60/24)%7,daysToWeek:Math.floor(this.totalSecsLeft/60/60/24)%7,daysToMonth:Math.floor(this.totalSecsLeft/60/60/24%30.4368),totalDays:Math.floor(this.totalSecsLeft/60/60/24),weeks:Math.floor(this.totalSecsLeft/60/60/24/7),months:Math.floor(this.totalSecsLeft/60/60/24/30.4368),years:Math.abs(this.finalDate.getFullYear()-d.getFullYear())},this.options.elapse||0!==this.totalSecsLeft?this.dispatchEvent(\"update\"):(this.stop(),this.dispatchEvent(\"finish\")))},dispatchEvent:function(b){var c=a.Event(b+\".countdown\");c.finalDate=this.finalDate,c.elapsed=this.elapsed,c.offset=a.extend({},this.offset),c.strftime=d(this.offset),this.$el.trigger(c)}}),a.fn.countdown=function(){var b=Array.prototype.slice.call(arguments,0);return this.each(function(){var c=a(this).data(\"countdown-instance\");if(void 0!==c){var d=f[c],e=b[0];j.prototype.hasOwnProperty(e)?d[e].apply(d,b.slice(1)):null===String(e).match(/^[$A-Z_][0-9A-Z_$]*$/i)?(d.setFinalDate.call(d,e),d.start()):a.error(\"Method %s does not exist on jQuery.countdown\".replace(/\\%s/gi,e))}else new j(this,b[0],b[1])})}});";
var mod_pagespeed_wCoRhPaIYz = "/**\n * jquery-circle-progress - jQuery Plugin to draw animated circular progress bars:\n * {@link http://kottenator.github.io/jquery-circle-progress/}\n *\n * @author Rostyslav Bryzgunov <kottenator@gmail.com>\n * @version 1.2.2\n * @licence MIT\n * @preserve\n */\n!function(i){if(\"function\"==typeof define&&define.amd)define([\"jquery\"],i);else if(\"object\"==typeof module&&module.exports){var t=require(\"jquery\");i(t),module.exports=t}else i(jQuery)}(function(i){function t(i){this.init(i)}t.prototype={value:0,size:100,startAngle:-Math.PI,thickness:\"auto\",fill:{gradient:[\"#3aeabb\",\"#fdd250\"]},emptyFill:\"rgba(0, 0, 0, .1)\",animation:{duration:1200,easing:\"circleProgressEasing\"},animationStartValue:0,reverse:!1,lineCap:\"butt\",insertMode:\"prepend\",constructor:t,el:null,canvas:null,ctx:null,radius:0,arcFill:null,lastFrameValue:0,init:function(t){i.extend(this,t),this.radius=this.size/2,this.initWidget(),this.initFill(),this.draw(),this.el.trigger(\"circle-inited\")},initWidget:function(){this.canvas||(this.canvas=i(\"<canvas>\")[\"prepend\"==this.insertMode?\"prependTo\":\"appendTo\"](this.el)[0]);var t=this.canvas;if(t.width=this.size,t.height=this.size,this.ctx=t.getContext(\"2d\"),window.devicePixelRatio>1){var e=window.devicePixelRatio;t.style.width=t.style.height=this.size+\"px\",t.width=t.height=this.size*e,this.ctx.scale(e,e)}},initFill:function(){function t(){var t=i(\"<canvas>\")[0];t.width=e.size,t.height=e.size,t.getContext(\"2d\").drawImage(g,0,0,r,r),e.arcFill=e.ctx.createPattern(t,\"no-repeat\"),e.drawFrame(e.lastFrameValue)}var e=this,a=this.fill,n=this.ctx,r=this.size;if(!a)throw Error(\"The fill is not specified!\");if(\"string\"==typeof a&&(a={color:a}),a.color&&(this.arcFill=a.color),a.gradient){var s=a.gradient;if(1==s.length)this.arcFill=s[0];else if(s.length>1){for(var l=a.gradientAngle||0,o=a.gradientDirection||[r/2*(1-Math.cos(l)),r/2*(1+Math.sin(l)),r/2*(1+Math.cos(l)),r/2*(1-Math.sin(l))],h=n.createLinearGradient.apply(n,o),c=0;c<s.length;c++){var d=s[c],u=c/(s.length-1);i.isArray(d)&&(u=d[1],d=d[0]),h.addColorStop(u,d)}this.arcFill=h}}if(a.image){var g;a.image instanceof Image?g=a.image:(g=new Image,g.src=a.image),g.complete?t():g.onload=t}},draw:function(){this.animation?this.drawAnimated(this.value):this.drawFrame(this.value)},drawFrame:function(i){this.lastFrameValue=i,this.ctx.clearRect(0,0,this.size,this.size),this.drawEmptyArc(i),this.drawArc(i)},drawArc:function(i){if(0!==i){var t=this.ctx,e=this.radius,a=this.getThickness(),n=this.startAngle;t.save(),t.beginPath(),this.reverse?t.arc(e,e,e-a/2,n-2*Math.PI*i,n):t.arc(e,e,e-a/2,n,n+2*Math.PI*i),t.lineWidth=a,t.lineCap=this.lineCap,t.strokeStyle=this.arcFill,t.stroke(),t.restore()}},drawEmptyArc:function(i){var t=this.ctx,e=this.radius,a=this.getThickness(),n=this.startAngle;i<1&&(t.save(),t.beginPath(),i<=0?t.arc(e,e,e-a/2,0,2*Math.PI):this.reverse?t.arc(e,e,e-a/2,n,n-2*Math.PI*i):t.arc(e,e,e-a/2,n+2*Math.PI*i,n),t.lineWidth=a,t.strokeStyle=this.emptyFill,t.stroke(),t.restore())},drawAnimated:function(t){var e=this,a=this.el,n=i(this.canvas);n.stop(!0,!1),a.trigger(\"circle-animation-start\"),n.css({animationProgress:0}).animate({animationProgress:1},i.extend({},this.animation,{step:function(i){var n=e.animationStartValue*(1-i)+t*i;e.drawFrame(n),a.trigger(\"circle-animation-progress\",[i,n])}})).promise().always(function(){a.trigger(\"circle-animation-end\")})},getThickness:function(){return i.isNumeric(this.thickness)?this.thickness:this.size/14},getValue:function(){return this.value},setValue:function(i){this.animation&&(this.animationStartValue=this.lastFrameValue),this.value=i,this.draw()}},i.circleProgress={defaults:t.prototype},i.easing.circleProgressEasing=function(i){return i<.5?(i=2*i,.5*i*i*i):(i=2-2*i,1-.5*i*i*i)},i.fn.circleProgress=function(e,a){var n=\"circle-progress\",r=this.data(n);if(\"widget\"==e){if(!r)throw Error('Calling \"widget\" method on not initialized instance is forbidden');return r.canvas}if(\"value\"==e){if(!r)throw Error('Calling \"value\" method on not initialized instance is forbidden');if(\"undefined\"==typeof a)return r.getValue();var s=arguments[1];return this.each(function(){i(this).data(n).setValue(s)})}return this.each(function(){var a=i(this),r=a.data(n),s=i.isPlainObject(e)?e:{};if(r)r.init(s);else{var l=i.extend({},a.data());\"string\"==typeof l.fill&&(l.fill=JSON.parse(l.fill)),\"string\"==typeof l.animation&&(l.animation=JSON.parse(l.animation)),s=i.extend(l,s),s.el=a,r=new t(s),a.data(n,r)}})}});";
var mod_pagespeed_oilApK1NJI = "!function(t){\"function\"==typeof define&&define.amd?define([\"jquery\"],t):t(\"object\"==typeof exports?require(\"jquery\"):jQuery)}(function(t){function e(t,e){return t.toFixed(e.decimals)}var o=function(e,i){this.$element=t(e),this.options=t.extend({},o.DEFAULTS,this.dataOptions(),i),this.init()};o.DEFAULTS={from:0,to:0,speed:1e3,refreshInterval:100,decimals:0,formatter:e,onUpdate:null,onComplete:null},o.prototype.init=function(){this.value=this.options.from,this.loops=Math.ceil(this.options.speed/this.options.refreshInterval),this.loopCount=0,this.increment=(this.options.to-this.options.from)/this.loops},o.prototype.dataOptions=function(){var t={from:this.$element.data(\"from\"),to:this.$element.data(\"to\"),speed:this.$element.data(\"speed\"),refreshInterval:this.$element.data(\"refresh-interval\"),decimals:this.$element.data(\"decimals\")},e=Object.keys(t);for(var o in e){var i=e[o];\"undefined\"==typeof t[i]&&delete t[i]}return t},o.prototype.update=function(){this.value+=this.increment,this.loopCount++,this.render(),\"function\"==typeof this.options.onUpdate&&this.options.onUpdate.call(this.$element,this.value),this.loopCount>=this.loops&&(clearInterval(this.interval),this.value=this.options.to,\"function\"==typeof this.options.onComplete&&this.options.onComplete.call(this.$element,this.value))},o.prototype.render=function(){var t=this.options.formatter.call(this.$element,this.value,this.options);this.$element.text(t)},o.prototype.restart=function(){this.stop(),this.init(),this.start()},o.prototype.start=function(){this.stop(),this.render(),this.interval=setInterval(this.update.bind(this),this.options.refreshInterval)},o.prototype.stop=function(){this.interval&&clearInterval(this.interval)},o.prototype.toggle=function(){this.interval?this.stop():this.start()},t.fn.countTo=function(e){return this.each(function(){var i=t(this),n=i.data(\"countTo\"),s=!n||\"object\"==typeof e,r=\"object\"==typeof e?e:{},a=\"string\"==typeof e?e:\"start\";s&&(n&&n.stop(),i.data(\"countTo\",n=new o(this,r))),n[a].call(n)})}});";
var mod_pagespeed_$$UnVlyohC = "\r\n(function($) {\r\n    // 'use strict';\r\n\r\n    // Main Navigation\r\n    $( '.hamburger-menu' ).on( 'click', function() {\r\n        $(this).toggleClass('open');\r\n        $('.site-navigation').toggleClass('show');\r\n    });\r\n\r\n    var countdown_date = $('.countdown').data(\"date\");\r\n\r\n    $('.countdown').countdown(countdown_date, function(event) {\r\n        $('.dday').html(event.strftime('%-D'));\r\n        $('.dhour').html(event.strftime('%-H'));\r\n        $('.dmin').html(event.strftime('%-M'));\r\n        $('.dsec').html(event.strftime('%-S'));\r\n    });\r\n\r\n    // Events Slider\r\n    var next_event_slider = new Swiper('.next-event-slider', {\r\n        slidesPerView: 4,\r\n        spaceBetween: 20,\r\n        loop: true,\r\n        centeredSlides: true,\r\n        breakpoints: {\r\n            // when window width is <= 320px\r\n            576: {\r\n                slidesPerView: 1\r\n            },\r\n            // when window width is <= 480px\r\n            768: {\r\n                slidesPerView: 2\r\n            },\r\n            // when window width is <= 640px\r\n            1200: {\r\n                slidesPerView: 3\r\n            }\r\n        },\r\n        navigation: {\r\n            nextEl: '.next-event-slider-wrap .swiper-button-next'\r\n        }\r\n    });\r\n\r\n    // Testimonial slider\r\n    var testimonialsSlider = new Swiper('.testimonials-slider', {\r\n        slidesPerView: 1,\r\n        spaceBetween: 0,\r\n        loop: true,\r\n        pagination: {\r\n            el: '.swiper-pagination',\r\n            clickable: true,\r\n        },\r\n        navigation: {\r\n            nextEl: '.testimonials-container .swiper-button-next'\r\n        }\r\n    });\r\n\r\n    // Buy Tickets Form\r\n    $(\".increase-ticket\").click(function() {\r\n        var $n = $(this)\r\n            .parent(\".number-of-tickets\")\r\n            .parent(\".flex\")\r\n            .parent(\".ticket-row\")\r\n            .find(\".ticket-count\");\r\n        $n.val(Number($n.val())+1 );\r\n    });\r\n\r\n    $(\".decrease-ticket\").click(function() {\r\n        var $n = $(this)\r\n            .parent(\".number-of-tickets\")\r\n            .parent(\".flex\")\r\n            .parent(\".ticket-row\")\r\n            .find(\".ticket-count\");\r\n        var amount = Number($n.val());\r\n        if (amount > 0) {\r\n            $n.val(amount-1);\r\n        }\r\n    });\r\n\r\n    $(\".clear-ticket-count\").on( 'click', function() {\r\n        var $count = $('.ticket-count');\r\n        $count.val('1');\r\n    });\r\n\r\n    // Tabs\r\n    $(function() {\r\n        $('.tab-content:first-child').show();\r\n\r\n        $('.tab-nav').bind('click', function(e) {\r\n            $this = $(this);\r\n            $tabs = $this.parent().parent().next();\r\n            $target = $($this.data(\"target\"));\r\n            $this.siblings().removeClass('active');\r\n            $target.siblings().css(\"display\", \"none\");\r\n            $this.addClass('active');\r\n            $target.fadeIn(\"slow\");\r\n        });\r\n\r\n        $('.tab-nav:first-child').trigger('click');\r\n    });\r\n\r\n    // Accordion & Toggle\r\n    $('.accordion-wrap.type-accordion').collapsible({\r\n        accordion: true,\r\n        contentOpen: 0,\r\n        arrowRclass: 'arrow-r',\r\n        arrowDclass: 'arrow-d'\r\n    });\r\n\r\n    $('.accordion-wrap .entry-title').on('click', function() {\r\n        $('.accordion-wrap .entry-title').removeClass('active');\r\n        $(this).addClass('active');\r\n    });\r\n\r\n    // Circular Progress Bar\r\n    $('#hard_work').circleProgress({\r\n        startAngle: -Math.PI / 4 * 2,\r\n        value: 0.75,\r\n        size: 220,\r\n        thickness: 3,\r\n        fill: {\r\n            gradient: [\"#00d1ff\", \"#1effc5\"]\r\n        }\r\n    }).on('circle-animation-progress', function(event, progress) {\r\n        $(this).find('strong').html(Math.round(75 * progress) + '<span>%</span>');\r\n    });\r\n\r\n    $('#good_music').circleProgress({\r\n        startAngle: -Math.PI / 4 * 2,\r\n        value: 0.83,\r\n        size: 220,\r\n        thickness: 3,\r\n        fill: {\r\n            gradient: [\"#00d1ff\", \"#1effc5\"]\r\n        }\r\n    }).on('circle-animation-progress', function(event, progress) {\r\n        $(this).find('strong').html(Math.round(83 * progress) + '<span>%</span>');\r\n    });\r\n\r\n    $('#power').circleProgress({\r\n        startAngle: -Math.PI / 4 * 2,\r\n        value: 0.65,\r\n        size: 220,\r\n        thickness: 3,\r\n        fill: {\r\n            gradient: [\"#00d1ff\", \"#1effc5\"]\r\n        }\r\n    }).on('circle-animation-progress', function(event, progress) {\r\n        $(this).find('strong').html(Math.round(65 * progress) + '<span>%</span>');\r\n    });\r\n\r\n    $('#fun_time').circleProgress({\r\n        startAngle: -Math.PI / 4 * 2,\r\n        value: 1,\r\n        size: 220,\r\n        thickness: 3,\r\n        fill: {\r\n            gradient: [\"#00d1ff\", \"#1effc5\"]\r\n        }\r\n    }).on('circle-animation-progress', function(event, progress) {\r\n        $(this).find('strong').html(Math.round(100 * progress) + '<span>%</span>');\r\n    });\r\n\r\n    // Counter\r\n    $(\".start-counter\").each(function () {\r\n        var counter = $(this);\r\n\r\n        counter.countTo({\r\n            formatter: function (value, options) {\r\n                return value.toFixed(options.decimals).replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, ',');\r\n            }\r\n        });\r\n    });\r\n\r\n    // Load more events\r\n    var $container      = $('.blog-list-page');\r\n    var $item           = $('.single-blog-content');\r\n\r\n    $item.slice(0, 6).addClass('visible');\r\n\r\n    $('.load-more .btn').on('click', function (e) {\r\n        e.preventDefault();\r\n\r\n        $('.single-blog-content:hidden').slice(0, 6).addClass('visible');\r\n        $container.masonry();\r\n    });\r\n\r\n    // Back to Top\r\n    if ( $( '.back-to-top' ).length) {\r\n        var scrollTrigger = 500, // px\r\n            backToTop = function () {\r\n                var scrollTop = $(window).scrollTop();\r\n                if (scrollTop > scrollTrigger) {\r\n                    $('.back-to-top').addClass('show');\r\n                } else {\r\n                    $('.back-to-top').removeClass('show');\r\n                }\r\n            };\r\n        backToTop();\r\n        $(window).on('scroll', function () {\r\n            backToTop();\r\n        });\r\n        $('.back-to-top').on('click', function (e) {\r\n            e.preventDefault();\r\n            $('html,body').animate({\r\n                scrollTop: 0\r\n            }, 800);\r\n        });\r\n    }\r\n\r\n})(jQuery);";
/** @license
 * DHTML Snowstorm! JavaScript-based snow for web pages
 * Making it snow on the internets since 2003. You're welcome.
 * -----------------------------------------------------------
 * Version 1.44.20131208 (Previous rev: 1.44.20131125)
 * Copyright (c) 2007, Scott Schiller. All rights reserved.
 * Code provided under the BSD License
 * http://schillmania.com/projects/snowstorm/license.txt
 */

/*jslint nomen: true, plusplus: true, sloppy: true, vars: true, white: true */
/*global window, document, navigator, clearInterval, setInterval */

var snowStorm = (function(window, document) {

    // --- common properties ---
  
    this.autoStart = true;          // Whether the snow should start automatically or not.
    this.excludeMobile = true;      // Snow is likely to be bad news for mobile phones' CPUs (and batteries.) Enable at your own risk.
    this.flakesMax = 128;           // Limit total amount of snow made (falling + sticking)
    this.flakesMaxActive = 64;      // Limit amount of snow falling at once (less = lower CPU use)
    this.animationInterval = 50;    // Theoretical "miliseconds per frame" measurement. 20 = fast + smooth, but high CPU use. 50 = more conservative, but slower
    this.useGPU = true;             // Enable transform-based hardware acceleration, reduce CPU load.
    this.className = null;          // CSS class name for further customization on snow elements
    this.excludeMobile = true;      // Snow is likely to be bad news for mobile phones' CPUs (and batteries.) By default, be nice.
    this.flakeBottom = null;        // Integer for Y axis snow limit, 0 or null for "full-screen" snow effect
    this.followMouse = false;        // Snow movement can respond to the user's mouse
    this.snowColor = '#fff';        // Don't eat (or use?) yellow snow.
    this.snowCharacter = '&bull;';  // &bull; = bullet, &middot; is square on some systems etc.
    this.snowStick = true;          // Whether or not snow should "stick" at the bottom. When off, will never collect.
    this.targetElement = null;      // element which snow will be appended to (null = document.body) - can be an element ID eg. 'myDiv', or a DOM node reference
    this.useMeltEffect = true;      // When recycling fallen snow (or rarely, when falling), have it "melt" and fade out if browser supports it
    this.useTwinkleEffect = false;  // Allow snow to randomly "flicker" in and out of view while falling
    this.usePositionFixed = false;  // true = snow does not shift vertically when scrolling. May increase CPU load, disabled by default - if enabled, used only where supported
    this.usePixelPosition = false;  // Whether to use pixel values for snow top/left vs. percentages. Auto-enabled if body is position:relative or targetElement is specified.
  
    // --- less-used bits ---
  
    this.freezeOnBlur = true;       // Only snow when the window is in focus (foreground.) Saves CPU.
    this.flakeLeftOffset = 0;       // Left margin/gutter space on edge of container (eg. browser window.) Bump up these values if seeing horizontal scrollbars.
    this.flakeRightOffset = 0;      // Right margin/gutter space on edge of container
    this.flakeWidth = 8;            // Max pixel width reserved for snow element
    this.flakeHeight = 8;           // Max pixel height reserved for snow element
    this.vMaxX = 5;                 // Maximum X velocity range for snow
    this.vMaxY = 4;                 // Maximum Y velocity range for snow
    this.zIndex = 0;                // CSS stacking order applied to each snowflake
  
    // --- "No user-serviceable parts inside" past this point, yadda yadda ---
  
    var storm = this,
    features,
    // UA sniffing and backCompat rendering mode checks for fixed position, etc.
    isIE = navigator.userAgent.match(/msie/i),
    isIE6 = navigator.userAgent.match(/msie 6/i),
    isMobile = navigator.userAgent.match(/mobile|opera m(ob|in)/i),
    isBackCompatIE = (isIE && document.compatMode === 'BackCompat'),
    noFixed = (isBackCompatIE || isIE6),
    screenX = null, screenX2 = null, screenY = null, scrollY = null, docHeight = null, vRndX = null, vRndY = null,
    windOffset = 1,
    windMultiplier = 2,
    flakeTypes = 6,
    fixedForEverything = false,
    targetElementIsRelative = false,
    opacitySupported = (function(){
      try {
        document.createElement('div').style.opacity = '0.5';
      } catch(e) {
        return false;
      }
      return true;
    }()),
    didInit = false,
    docFrag = document.createDocumentFragment();
  
    features = (function() {
  
      var getAnimationFrame;
  
      /**
       * hat tip: paul irish
       * http://paulirish.com/2011/requestanimationframe-for-smart-animating/
       * https://gist.github.com/838785
       */
  
      function timeoutShim(callback) {
        window.setTimeout(callback, 1000/(storm.animationInterval || 20));
      }
  
      var _animationFrame = (window.requestAnimationFrame ||
          window.webkitRequestAnimationFrame ||
          window.mozRequestAnimationFrame ||
          window.oRequestAnimationFrame ||
          window.msRequestAnimationFrame ||
          timeoutShim);
  
      // apply to window, avoid "illegal invocation" errors in Chrome
      getAnimationFrame = _animationFrame ? function() {
        return _animationFrame.apply(window, arguments);
      } : null;
  
      var testDiv;
  
      testDiv = document.createElement('div');
  
      function has(prop) {
  
        // test for feature support
        var result = testDiv.style[prop];
        return (result !== undefined ? prop : null);
  
      }
  
      // note local scope.
      var localFeatures = {
  
        transform: {
          ie:  has('-ms-transform'),
          moz: has('MozTransform'),
          opera: has('OTransform'),
          webkit: has('webkitTransform'),
          w3: has('transform'),
          prop: null // the normalized property value
        },
  
        getAnimationFrame: getAnimationFrame
  
      };
  
      localFeatures.transform.prop = (
        localFeatures.transform.w3 || 
        localFeatures.transform.moz ||
        localFeatures.transform.webkit ||
        localFeatures.transform.ie ||
        localFeatures.transform.opera
      );
  
      testDiv = null;
  
      return localFeatures;
  
    }());
  
    this.timer = null;
    this.flakes = [];
    this.disabled = false;
    this.active = false;
    this.meltFrameCount = 20;
    this.meltFrames = [];
  
    this.setXY = function(o, x, y) {
  
      if (!o) {
        return false;
      }
  
      if (storm.usePixelPosition || targetElementIsRelative) {
  
        o.style.left = (x - storm.flakeWidth) + 'px';
        o.style.top = (y - storm.flakeHeight) + 'px';
  
      } else if (noFixed) {
  
        o.style.right = (100-(x/screenX*100)) + '%';
        // avoid creating vertical scrollbars
        o.style.top = (Math.min(y, docHeight-storm.flakeHeight)) + 'px';
  
      } else {
  
        if (!storm.flakeBottom) {
  
          // if not using a fixed bottom coordinate...
          o.style.right = (100-(x/screenX*100)) + '%';
          o.style.bottom = (100-(y/screenY*100)) + '%';
  
        } else {
  
          // absolute top.
          o.style.right = (100-(x/screenX*100)) + '%';
          o.style.top = (Math.min(y, docHeight-storm.flakeHeight)) + 'px';
  
        }
  
      }
  
    };
  
    this.events = (function() {
  
      var old = (!window.addEventListener && window.attachEvent), slice = Array.prototype.slice,
      evt = {
        add: (old?'attachEvent':'addEventListener'),
        remove: (old?'detachEvent':'removeEventListener')
      };
  
      function getArgs(oArgs) {
        var args = slice.call(oArgs), len = args.length;
        if (old) {
          args[1] = 'on' + args[1]; // prefix
          if (len > 3) {
            args.pop(); // no capture
          }
        } else if (len === 3) {
          args.push(false);
        }
        return args;
      }
  
      function apply(args, sType) {
        var element = args.shift(),
            method = [evt[sType]];
        if (old) {
          element[method](args[0], args[1]);
        } else {
          element[method].apply(element, args);
        }
      }
  
      function addEvent() {
        apply(getArgs(arguments), 'add');
      }
  
      function removeEvent() {
        apply(getArgs(arguments), 'remove');
      }
  
      return {
        add: addEvent,
        remove: removeEvent
      };
  
    }());
  
    function rnd(n,min) {
      if (isNaN(min)) {
        min = 0;
      }
      return (Math.random()*n)+min;
    }
  
    function plusMinus(n) {
      return (parseInt(rnd(2),10)===1?n*-1:n);
    }
  
    this.randomizeWind = function() {
      var i;
      vRndX = plusMinus(rnd(storm.vMaxX,0.2));
      vRndY = rnd(storm.vMaxY,0.2);
      if (this.flakes) {
        for (i=0; i<this.flakes.length; i++) {
          if (this.flakes[i].active) {
            this.flakes[i].setVelocities();
          }
        }
      }
    };
  
    this.scrollHandler = function() {
      var i;
      // "attach" snowflakes to bottom of window if no absolute bottom value was given
      scrollY = (storm.flakeBottom ? 0 : parseInt(window.scrollY || document.documentElement.scrollTop || (noFixed ? document.body.scrollTop : 0), 10));
      if (isNaN(scrollY)) {
        scrollY = 0; // Netscape 6 scroll fix
      }
      if (!fixedForEverything && !storm.flakeBottom && storm.flakes) {
        for (i=0; i<storm.flakes.length; i++) {
          if (storm.flakes[i].active === 0) {
            storm.flakes[i].stick();
          }
        }
      }
    };
  
    this.resizeHandler = function() {
      if (window.innerWidth || window.innerHeight) {
        screenX = window.innerWidth - 16 - storm.flakeRightOffset;
        screenY = (storm.flakeBottom || window.innerHeight);
      } else {
        screenX = (document.documentElement.clientWidth || document.body.clientWidth || document.body.scrollWidth) - (!isIE ? 8 : 0) - storm.flakeRightOffset;
        screenY = storm.flakeBottom || document.documentElement.clientHeight || document.body.clientHeight || document.body.scrollHeight;
      }
      docHeight = document.body.offsetHeight;
      screenX2 = parseInt(screenX/2,10);
    };
  
    this.resizeHandlerAlt = function() {
      screenX = storm.targetElement.offsetWidth - storm.flakeRightOffset;
      screenY = storm.flakeBottom || storm.targetElement.offsetHeight;
      screenX2 = parseInt(screenX/2,10);
      docHeight = document.body.offsetHeight;
    };
  
    this.freeze = function() {
      // pause animation
      if (!storm.disabled) {
        storm.disabled = 1;
      } else {
        return false;
      }
      storm.timer = null;
    };
  
    this.resume = function() {
      if (storm.disabled) {
         storm.disabled = 0;
      } else {
        return false;
      }
      storm.timerInit();
    };
  
    this.toggleSnow = function() {
      if (!storm.flakes.length) {
        // first run
        storm.start();
      } else {
        storm.active = !storm.active;
        if (storm.active) {
          storm.show();
          storm.resume();
        } else {
          storm.stop();
          storm.freeze();
        }
      }
    };
  
    this.stop = function() {
      var i;
      this.freeze();
      for (i=0; i<this.flakes.length; i++) {
        this.flakes[i].o.style.display = 'none';
      }
      storm.events.remove(window,'scroll',storm.scrollHandler);
      storm.events.remove(window,'resize',storm.resizeHandler);
      if (storm.freezeOnBlur) {
        if (isIE) {
          storm.events.remove(document,'focusout',storm.freeze);
          storm.events.remove(document,'focusin',storm.resume);
        } else {
          storm.events.remove(window,'blur',storm.freeze);
          storm.events.remove(window,'focus',storm.resume);
        }
      }
    };
  
    this.show = function() {
      var i;
      for (i=0; i<this.flakes.length; i++) {
        this.flakes[i].o.style.display = 'block';
      }
    };
  
    this.SnowFlake = function(type,x,y) {
      var s = this;
      this.type = type;
      this.x = x||parseInt(rnd(screenX-20),10);
      this.y = (!isNaN(y)?y:-rnd(screenY)-12);
      this.vX = null;
      this.vY = null;
      this.vAmpTypes = [1,1.2,1.4,1.6,1.8]; // "amplification" for vX/vY (based on flake size/type)
      this.vAmp = this.vAmpTypes[this.type] || 1;
      this.melting = false;
      this.meltFrameCount = storm.meltFrameCount;
      this.meltFrames = storm.meltFrames;
      this.meltFrame = 0;
      this.twinkleFrame = 0;
      this.active = 1;
      this.fontSize = (10+(this.type/5)*10);
      this.o = document.createElement('div');
      this.o.innerHTML = storm.snowCharacter;
      if (storm.className) {
        this.o.setAttribute('class', storm.className);
      }
      this.o.style.color = storm.snowColor;
      this.o.style.position = (fixedForEverything?'fixed':'absolute');
      if (storm.useGPU && features.transform.prop) {
        // GPU-accelerated snow.
        this.o.style[features.transform.prop] = 'translate3d(0px, 0px, 0px)';
      }
      this.o.style.width = storm.flakeWidth+'px';
      this.o.style.height = storm.flakeHeight+'px';
      this.o.style.fontFamily = 'arial,verdana';
      this.o.style.cursor = 'default';
      this.o.style.overflow = 'hidden';
      this.o.style.fontWeight = 'normal';
      this.o.style.zIndex = storm.zIndex;
      docFrag.appendChild(this.o);
  
      this.refresh = function() {
        if (isNaN(s.x) || isNaN(s.y)) {
          // safety check
          return false;
        }
        storm.setXY(s.o, s.x, s.y);
      };
  
      this.stick = function() {
        if (noFixed || (storm.targetElement !== document.documentElement && storm.targetElement !== document.body)) {
          s.o.style.top = (screenY+scrollY-storm.flakeHeight)+'px';
        } else if (storm.flakeBottom) {
          s.o.style.top = storm.flakeBottom+'px';
        } else {
          s.o.style.display = 'none';
          s.o.style.bottom = '0%';
          s.o.style.position = 'fixed';
          s.o.style.display = 'block';
        }
      };
  
      this.vCheck = function() {
        if (s.vX>=0 && s.vX<0.2) {
          s.vX = 0.2;
        } else if (s.vX<0 && s.vX>-0.2) {
          s.vX = -0.2;
        }
        if (s.vY>=0 && s.vY<0.2) {
          s.vY = 0.2;
        }
      };
  
      this.move = function() {
        var vX = s.vX*windOffset, yDiff;
        s.x += vX;
        s.y += (s.vY*s.vAmp);
        if (s.x >= screenX || screenX-s.x < storm.flakeWidth) { // X-axis scroll check
          s.x = 0;
        } else if (vX < 0 && s.x-storm.flakeLeftOffset < -storm.flakeWidth) {
          s.x = screenX-storm.flakeWidth-1; // flakeWidth;
        }
        s.refresh();
        yDiff = screenY+scrollY-s.y+storm.flakeHeight;
        if (yDiff<storm.flakeHeight) {
          s.active = 0;
          if (storm.snowStick) {
            s.stick();
          } else {
            s.recycle();
          }
        } else {
          if (storm.useMeltEffect && s.active && s.type < 3 && !s.melting && Math.random()>0.998) {
            // ~1/1000 chance of melting mid-air, with each frame
            s.melting = true;
            s.melt();
            // only incrementally melt one frame
            // s.melting = false;
          }
          if (storm.useTwinkleEffect) {
            if (s.twinkleFrame < 0) {
              if (Math.random() > 0.97) {
                s.twinkleFrame = parseInt(Math.random() * 8, 10);
              }
            } else {
              s.twinkleFrame--;
              if (!opacitySupported) {
                s.o.style.visibility = (s.twinkleFrame && s.twinkleFrame % 2 === 0 ? 'hidden' : 'visible');
              } else {
                s.o.style.opacity = (s.twinkleFrame && s.twinkleFrame % 2 === 0 ? 0 : 1);
              }
            }
          }
        }
      };
  
      this.animate = function() {
        // main animation loop
        // move, check status, die etc.
        s.move();
      };
  
      this.setVelocities = function() {
        s.vX = vRndX+rnd(storm.vMaxX*0.12,0.1);
        s.vY = vRndY+rnd(storm.vMaxY*0.12,0.1);
      };
  
      this.setOpacity = function(o,opacity) {
        if (!opacitySupported) {
          return false;
        }
        o.style.opacity = opacity;
      };
  
      this.melt = function() {
        if (!storm.useMeltEffect || !s.melting) {
          s.recycle();
        } else {
          if (s.meltFrame < s.meltFrameCount) {
            s.setOpacity(s.o,s.meltFrames[s.meltFrame]);
            s.o.style.fontSize = s.fontSize-(s.fontSize*(s.meltFrame/s.meltFrameCount))+'px';
            s.o.style.lineHeight = storm.flakeHeight+2+(storm.flakeHeight*0.75*(s.meltFrame/s.meltFrameCount))+'px';
            s.meltFrame++;
          } else {
            s.recycle();
          }
        }
      };
  
      this.recycle = function() {
        s.o.style.display = 'none';
        s.o.style.position = (fixedForEverything?'fixed':'absolute');
        s.o.style.bottom = 'auto';
        s.setVelocities();
        s.vCheck();
        s.meltFrame = 0;
        s.melting = false;
        s.setOpacity(s.o,1);
        s.o.style.padding = '0px';
        s.o.style.margin = '0px';
        s.o.style.fontSize = s.fontSize+'px';
        s.o.style.lineHeight = (storm.flakeHeight+2)+'px';
        s.o.style.textAlign = 'center';
        s.o.style.verticalAlign = 'baseline';
        s.x = parseInt(rnd(screenX-storm.flakeWidth-20),10);
        s.y = parseInt(rnd(screenY)*-1,10)-storm.flakeHeight;
        s.refresh();
        s.o.style.display = 'block';
        s.active = 1;
      };
  
      this.recycle(); // set up x/y coords etc.
      this.refresh();
  
    };
  
    this.snow = function() {
      var active = 0, flake = null, i, j;
      for (i=0, j=storm.flakes.length; i<j; i++) {
        if (storm.flakes[i].active === 1) {
          storm.flakes[i].move();
          active++;
        }
        if (storm.flakes[i].melting) {
          storm.flakes[i].melt();
        }
      }
      if (active<storm.flakesMaxActive) {
        flake = storm.flakes[parseInt(rnd(storm.flakes.length),10)];
        if (flake.active === 0) {
          flake.melting = true;
        }
      }
      if (storm.timer) {
        features.getAnimationFrame(storm.snow);
      }
    };
  
    this.mouseMove = function(e) {
      if (!storm.followMouse) {
        return true;
      }
      var x = parseInt(e.clientX,10);
      if (x<screenX2) {
        windOffset = -windMultiplier+(x/screenX2*windMultiplier);
      } else {
        x -= screenX2;
        windOffset = (x/screenX2)*windMultiplier;
      }
    };
  
    this.createSnow = function(limit,allowInactive) {
      var i;
      for (i=0; i<limit; i++) {
        storm.flakes[storm.flakes.length] = new storm.SnowFlake(parseInt(rnd(flakeTypes),10));
        if (allowInactive || i>storm.flakesMaxActive) {
          storm.flakes[storm.flakes.length-1].active = -1;
        }
      }
      storm.targetElement.appendChild(docFrag);
    };
  
    this.timerInit = function() {
      storm.timer = true;
      storm.snow();
    };
  
    this.init = function() {
      var i;
      for (i=0; i<storm.meltFrameCount; i++) {
        storm.meltFrames.push(1-(i/storm.meltFrameCount));
      }
      storm.randomizeWind();
      storm.createSnow(storm.flakesMax); // create initial batch
      storm.events.add(window,'resize',storm.resizeHandler);
      storm.events.add(window,'scroll',storm.scrollHandler);
      if (storm.freezeOnBlur) {
        if (isIE) {
          storm.events.add(document,'focusout',storm.freeze);
          storm.events.add(document,'focusin',storm.resume);
        } else {
          storm.events.add(window,'blur',storm.freeze);
          storm.events.add(window,'focus',storm.resume);
        }
      }
      storm.resizeHandler();
      storm.scrollHandler();
      if (storm.followMouse) {
        storm.events.add(isIE?document:window,'mousemove',storm.mouseMove);
      }
      storm.animationInterval = Math.max(20,storm.animationInterval);
      storm.timerInit();
    };
  
    this.start = function(bFromOnLoad) {
      if (!didInit) {
        didInit = true;
      } else if (bFromOnLoad) {
        // already loaded and running
        return true;
      }
      if (typeof storm.targetElement === 'string') {
        var targetID = storm.targetElement;
        storm.targetElement = document.getElementById(targetID);
        if (!storm.targetElement) {
          throw new Error('Snowstorm: Unable to get targetElement "'+targetID+'"');
        }
      }
      if (!storm.targetElement) {
        storm.targetElement = (document.body || document.documentElement);
      }
      if (storm.targetElement !== document.documentElement && storm.targetElement !== document.body) {
        // re-map handler to get element instead of screen dimensions
        storm.resizeHandler = storm.resizeHandlerAlt;
        //and force-enable pixel positioning
        storm.usePixelPosition = true;
      }
      storm.resizeHandler(); // get bounding box elements
      storm.usePositionFixed = (storm.usePositionFixed && !noFixed && !storm.flakeBottom); // whether or not position:fixed is to be used
      if (window.getComputedStyle) {
        // attempt to determine if body or user-specified snow parent element is relatlively-positioned.
        try {
          targetElementIsRelative = (window.getComputedStyle(storm.targetElement, null).getPropertyValue('position') === 'relative');
        } catch(e) {
          // oh well
          targetElementIsRelative = false;
        }
      }
      fixedForEverything = storm.usePositionFixed;
      if (screenX && screenY && !storm.disabled) {
        storm.init();
        storm.active = true;
      }
    };
  
    function doDelayedStart() {
      window.setTimeout(function() {
        storm.start(true);
      }, 20);
      // event cleanup
      storm.events.remove(isIE?document:window,'mousemove',doDelayedStart);
    }
  
    function doStart() {
      if (!storm.excludeMobile || !isMobile) {
        doDelayedStart();
      }
      // event cleanup
      storm.events.remove(window, 'load', doStart);
    }
  
    // hooks for starting the snow
    if (storm.autoStart) {
      storm.events.add(window, 'load', doStart, false);
    }
  
    return this;
  
  }(window, document));
  